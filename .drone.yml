kind: pipeline
type: docker
name: DataFactory Backend


steps:
  - name: unittests
    image: python:3.12-slim-bookworm
    pull: always
    environment:
      CODECOV_TOKEN:
        from_secret: CODECOV_TOKEN
    commands:
      - apt-get update
      - apt-get install -y --no-install-recommends libpq-dev gcc python3-dev build-essential
      - python -m pip install --upgrade pip
      - python -m pip install poetry coverage codecov
      - python -m poetry install
      #- python -m unittest discover -s test/ -p "test_*.py"
      #- py.test --cov-report html --cov=src -v
      - python -m coverage run -m unittest discover -s test/ -p "test_*.py"
      - python -m coverage xml
      - codecov -t "$CODECOV_TOKEN"
    when:
      ref:
        include:
          - refs/tags/test-*
          - refs/tags/acceptation-*
          - refs/tags/production-*

  - name: build_and_publish_package
    image: python:3.12-slim-bookworm
    pull: always
    environment:
      PUBLIC_PYPI_TOKEN:
        from_secret: PUBLIC_PYPI_TOKEN
    commands:
      - apt-get update
      - apt-get install -y --no-install-recommends libpq-dev gcc python3-dev build-essential
      - python -m pip install --upgrade pip
      - python -m pip install poetry
      - python -m poetry install
      - python -m poetry build
      - python -m poetry config pypi-token.pypi "$PUBLIC_PYPI_TOKEN"
      - python -m poetry publish
    when:
      ref:
        include:
          #- refs/tags/test-*
          #- refs/tags/acceptation-*
          - refs/tags/production-*
    depends_on:
      - unittests


  - name: slack_message
    image: plugins/slack
    pull: if-not-exists
    settings:
      webhook:
        from_secret: SLACK_WEBHOOK_URL
      template: >
        {{#success build.status}}
          ✅ *{{repo.name}}*
          🏷️ {{build.tag}}
          🔨 <{{build.link}}| Build #{{build.number}}>
          🔗 <https://github.com/{{ repo.owner }}/{{ repo.name }}/commit/{{ build.commit }}|Commit: {{ truncate build.commit 8 }}>
          👤 {{build.author.name}}
        {{else}}
          ❌ *{{repo.name}}*
          🏷️ {{build.tag}}
          🔨 <{{build.link}}| Build #{{build.number}}>
          🔗 <https://github.com/{{ repo.owner }}/{{ repo.name }}/commit/{{ build.commit }}|Commit: {{ truncate build.commit 8 }}>
          👤 {{build.author.name}}
        {{/success}}
    when:
      status: [ success, failure ]
      ref:
        include:
#          - refs/tags/acceptation-*
          - refs/tags/production-*
    depends_on:
      - build_and_publish_package
